Generation:
5

Phenotype:
np.where((x['BMI'] > 23.8) & (x['Age'] <= 32) & (x['BMI'] <= 32.6) & (x['Age'] <= 51) & (x['Glucose'] <= 87) & (x['Glucose'] > 98) & (x['DiabetesPedigreeFunction'] <= 0.218) & (x['Glucose'] > 127), np.where((x['SkinThickness'] > 33) & (x['BloodPressure'] <= 86) & (x['BMI'] > 26.5) & (x['DiabetesPedigreeFunction'] <= 0.956) & (x['BloodPressure'] > 96), np.where((x['Age'] <= 49) & (x['Glucose'] <= 107) & (x['DiabetesPedigreeFunction'] > 0.257), np.where((x['Glucose'] <= 82), np.where((x['Age'] <= 43), '0', '1'), '1'), np.where((x['Insulin'] > 275) & (x['Pregnancies'] <= 1), '0', np.where((x['Age'] > 30), '1', '1'))), np.where((x['Glucose'] <= 95) & (x['Pregnancies'] <= 17) & (x['Pregnancies'] <= 14), np.where((x['BloodPressure'] > 46), np.where((x['SkinThickness'] <= 99), '1', '1'), np.where((x['SkinThickness'] <= 34), '1', '0')), '0')), np.where((x['Age'] > 68) & (x['Insulin'] <= 58) & (x['Insulin'] <= 277) & (x['Age'] > 56), np.where((x['DiabetesPedigreeFunction'] > 0.645) & (x['Insulin'] > 145), np.where((x['BMI'] > 18.2) & (x['Age'] > 37), np.where((x['BMI'] <= 20.0), '0', '1'), np.where((x['Insulin'] <= 207), '1', '1')), np.where((x['Age'] > 53) & (x['BloodPressure'] > 52), '1', '0')), np.where((x['SkinThickness'] > 14) & (x['Insulin'] > 205), np.where((x['BloodPressure'] > 65), np.where((x['DiabetesPedigreeFunction'] > 0.231), '0', '0'), np.where((x['Pregnancies'] <= 12), '0', '1')), np.where((x['BMI'] > 28.9) & (x['BloodPressure'] <= 95), np.where((x['Pregnancies'] > 2), '1', '0'), np.where((x['Insulin'] > 115), '1', '0')))))

Genotype:
[68562, 41674, 96450, 19646, 29726, 11213, 72094, 22802, 68080, 87877, 44726, 69608, 85448, 82144, 33314, 82328, 22849, 266, 67409, 4684, 42713, 78461, 58049, 42868, 64909, 60914, 31809, 92195, 83749, 86052, 99349, 99657, 22615, 83204, 63736, 48900, 8111, 24615, 32867, 85624, 26420, 71320, 65688, 18795, 86575, 33117, 26213, 43899, 31327, 4192, 54300, 11112, 11208, 34403, 73083, 7077, 55956, 95585, 96818, 35931, 80302, 35525, 83130, 16648, 91930, 74519, 84974, 67575, 63640, 46257, 98569, 1691, 91406, 41628, 15628, 75370, 10515, 39548, 98337, 80191, 90866, 60175, 27262, 13270, 33659, 17143, 60038, 15895, 2859, 4156, 98905, 83955, 62465, 26443, 54157, 12728, 66679, 41623, 30868, 54897, 1120, 1320, 57409, 55630, 20683, 85256, 24120, 57941, 58419, 76731, 75670, 65816, 57301, 26202, 75175, 70059, 89007, 91784, 45761, 22231, 18642, 64413, 71790, 55669, 52224, 33334, 13482, 94726, 47854, 77725, 29893, 80348, 37260, 53494, 22211, 14287, 84184, 31381, 94795, 96760, 5341, 72245, 13914, 64986, 82145, 71069, 6985, 93705, 65447, 29065, 63203, 28580, 2946, 26989, 4390, 67712, 25461, 11028, 66849, 10917, 13744, 87498, 66342, 42937, 47993, 71287, 66367, 21255, 258, 48635, 22274, 95509, 53532, 80876, 65794, 87048, 15021, 25941, 76993, 34297, 42174, 47053, 68100, 60991, 31103, 65687, 55318, 4767, 61303, 4671, 27311, 3122, 21975, 53227, 45067, 67621, 20887, 63846, 46816, 8349, 72599, 36243, 44119, 15164, 8612, 6881, 78365, 8538, 60066, 16026, 77912, 54421, 72348, 14472, 71309, 49671, 99537, 66965, 85591, 35451, 28445, 25703, 24719, 84293, 44369, 79748, 2735, 78810, 83875, 20429, 59147, 1141, 21834, 41725, 37045, 41145, 79868, 36876, 84265, 84574, 10150, 29856, 67600, 67044, 39041, 70961, 20332, 11263, 39613, 17675, 64710, 45969, 93105, 53543, 20834, 51660, 4754, 43476, 88140, 19717, 39428, 7235, 14581, 35275, 11980, 16828, 46905, 788, 64491, 53960, 16048, 55836, 14396, 37202, 60424, 14770, 5910, 8791, 76609, 82774, 96197, 10025, 6255, 47348, 71207, 10024, 60561, 82212, 9117, 37580, 72144, 79852, 27710, 11688, 23782, 51806, 17500, 28406, 69994, 78136, 15363, 85431, 83468, 57135, 63432, 59281, 13118, 61131, 79076, 60680, 97711, 50356, 85851, 69001, 81589, 36889, 84186, 48249, 8111, 46008, 26140, 58403, 99206, 75473, 82140, 16576, 55092, 59730, 69312, 74476, 88681, 41470, 41069, 36828, 99931, 4347, 28309, 70932, 60745, 31328, 43141, 44226, 56918, 58188, 13078, 57703, 70860, 97119, 86071, 46595, 44158, 83755, 16439, 25199, 20783, 54246, 94729, 52219, 17649, 3968, 70143, 19931, 51664]
Tree:
(<cf> np.where( (<cond> (<cond> (<cond> (<cond> (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['BMI'] >  (<values_feature_5> 23.8) )))  &  (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['Age'] <=  (<values_feature_7> 32) ))))  &  (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['BMI'] <=  (<values_feature_5> 32.6) ))))  &  (<cond> (<cond> (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['Age'] <=  (<values_feature_7> 51) )))  &  (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['Glucose'] <=  (<values_feature_1> 87) ))))  &  (<cond> (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['Glucose'] >  (<values_feature_1> 98) )))  &  (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['DiabetesPedigreeFunction'] <=  (<values_feature_6> 0.218) ))))))  &  (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['Glucose'] >  (<values_feature_1> 127) )))) ,  (<cf> np.where( (<cond> (<cond> (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['SkinThickness'] >  (<values_feature_3> 33) )))  &  (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['BloodPressure'] <=  (<values_feature_2> 86) ))))  &  (<cond> (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['BMI'] >  (<values_feature_5> 26.5) )))  &  (<cond> (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['DiabetesPedigreeFunction'] <=  (<values_feature_6> 0.956) )))  &  (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['BloodPressure'] >  (<values_feature_2> 96) )))))) ,  (<cf> np.where( (<cond> (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['Age'] <=  (<values_feature_7> 49) )))  &  (<cond> (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['Glucose'] <=  (<values_feature_1> 107) )))  &  (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['DiabetesPedigreeFunction'] >  (<values_feature_6> 0.257) ))))) ,  (<cf> np.where( (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['Glucose'] <=  (<values_feature_1> 82) ))) ,  (<cf> np.where( (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['Age'] <=  (<values_feature_7> 43) ))) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '0')) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '1')) )) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '1')) )) ,  (<cf> np.where( (<cond> (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['Insulin'] >  (<values_feature_4> 275) )))  &  (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['Pregnancies'] <=  (<values_feature_0> 1) )))) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '0')) ,  (<cf> np.where( (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['Age'] >  (<values_feature_7> 30) ))) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '1')) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '1')) )) )) )) ,  (<cf> np.where( (<cond> (<cond> (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['Glucose'] <=  (<values_feature_1> 95) )))  &  (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['Pregnancies'] <=  (<values_feature_0> 17) ))))  &  (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['Pregnancies'] <=  (<values_feature_0> 14) )))) ,  (<cf> np.where( (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['BloodPressure'] >  (<values_feature_2> 46) ))) ,  (<cf> np.where( (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['SkinThickness'] <=  (<values_feature_3> 99) ))) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '1')) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '1')) )) ,  (<cf> np.where( (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['SkinThickness'] <=  (<values_feature_3> 34) ))) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '1')) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '0')) )) )) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '0')) )) )) ,  (<cf> np.where( (<cond> (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['Age'] >  (<values_feature_7> 68) )))  &  (<cond> (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['Insulin'] <=  (<values_feature_4> 58) )))  &  (<cond> (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['Insulin'] <=  (<values_feature_4> 277) )))  &  (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['Age'] >  (<values_feature_7> 56) )))))) ,  (<cf> np.where( (<cond> (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['DiabetesPedigreeFunction'] >  (<values_feature_6> 0.645) )))  &  (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['Insulin'] >  (<values_feature_4> 145) )))) ,  (<cf> np.where( (<cond> (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['BMI'] >  (<values_feature_5> 18.2) )))  &  (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['Age'] >  (<values_feature_7> 37) )))) ,  (<cf> np.where( (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['BMI'] <=  (<values_feature_5> 20.0) ))) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '0')) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '1')) )) ,  (<cf> np.where( (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['Insulin'] <=  (<values_feature_4> 207) ))) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '1')) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '1')) )) )) ,  (<cf> np.where( (<cond> (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['Age'] >  (<values_feature_7> 53) )))  &  (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['BloodPressure'] >  (<values_feature_2> 52) )))) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '1')) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '0')) )) )) ,  (<cf> np.where( (<cond> (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['SkinThickness'] >  (<values_feature_3> 14) )))  &  (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['Insulin'] >  (<values_feature_4> 205) )))) ,  (<cf> np.where( (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['BloodPressure'] >  (<values_feature_2> 65) ))) ,  (<cf> np.where( (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['DiabetesPedigreeFunction'] >  (<values_feature_6> 0.231) ))) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '0')) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '0')) )) ,  (<cf> np.where( (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['Pregnancies'] <=  (<values_feature_0> 12) ))) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '0')) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '1')) )) )) ,  (<cf> np.where( (<cond> (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['BMI'] >  (<values_feature_5> 28.9) )))  &  (<cond> (<GE_GENERATE:dataset_lessequal_conditions> (x['BloodPressure'] <=  (<values_feature_2> 95) )))) ,  (<cf> np.where( (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['Pregnancies'] >  (<values_feature_0> 2) ))) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '1')) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '0')) )) ,  (<cf> np.where( (<cond> (<GE_GENERATE:dataset_greater_conditions> (x['Insulin'] >  (<values_feature_4> 115) ))) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '1')) ,  (<cf> (<GE_GENERATE:dataset_target_labels> '0')) )) )) )) )) ))

Training fitness:
0.6276545953551463
Test fitness:
0.5407181257051835